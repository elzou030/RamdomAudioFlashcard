{"ast":null,"code":"var _jsxFileName = \"/Users/elvazou/Downloads/RamdomAudioFlashcard/frontend/src/components/UploadSong.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadSong({\n  setSongFilename\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const [folder, setFolder] = useState('');\n  const [error, setError] = useState('');\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setError('');\n  };\n  const handleFolderChange = e => {\n    setFolder(e.target.value);\n  };\n  const handleUpload = async () => {\n    if (!file || !folder) {\n      alert('Please select a song and folder');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('folderName', folder); // Correctly send folder name\n\n    try {\n      const response = await fetch('http://localhost:5100/api/upload', {\n        method: 'POST',\n        body: formData // Send the form data\n      });\n      if (response.ok) {\n        const data = await response.json();\n        alert(data.message); // Notify about the success\n        setSongFilename(file.name); // Save the filename for display\n      } else {\n        const data = await response.json();\n        setError(data.message || 'Upload failed');\n      }\n    } catch (error) {\n      setError('Failed to upload the file');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload a Song\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \"audio/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Folder Name\",\n      value: folder,\n      onChange: handleFolderChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload Song\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadSong, \"te2D7oxc+QjaTu+5C3eEEf6t57o=\");\n_c = UploadSong;\nexport default UploadSong;\nvar _c;\n$RefreshReg$(_c, \"UploadSong\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadSong","setSongFilename","_s","file","setFile","folder","setFolder","error","setError","handleFileChange","e","target","files","handleFolderChange","value","handleUpload","alert","formData","FormData","append","response","fetch","method","body","ok","data","json","message","name","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","placeholder","onClick","style","color","_c","$RefreshReg$"],"sources":["/Users/elvazou/Downloads/RamdomAudioFlashcard/frontend/src/components/UploadSong.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction UploadSong({ setSongFilename }) {\n  const [file, setFile] = useState(null);\n  const [folder, setFolder] = useState('');\n  const [error, setError] = useState('');\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n    setError('');\n  };\n\n  const handleFolderChange = (e) => {\n    setFolder(e.target.value);\n  };\n\n  const handleUpload = async () => {\n    if (!file || !folder) {\n      alert('Please select a song and folder');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('folderName', folder);  // Correctly send folder name\n\n    try {\n      const response = await fetch('http://localhost:5100/api/upload', {\n        method: 'POST',\n        body: formData,  // Send the form data\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        alert(data.message);  // Notify about the success\n        setSongFilename(file.name);  // Save the filename for display\n      } else {\n        const data = await response.json();\n        setError(data.message || 'Upload failed');\n      }\n    } catch (error) {\n      setError('Failed to upload the file');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Upload a Song</h2>\n      <input type=\"file\" onChange={handleFileChange} accept=\"audio/*\" />\n      <input\n        type=\"text\"\n        placeholder=\"Folder Name\"\n        value={folder}\n        onChange={handleFolderChange}\n      />\n      <button onClick={handleUpload}>Upload Song</button>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </div>\n  );\n}\n\nexport default UploadSong;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}