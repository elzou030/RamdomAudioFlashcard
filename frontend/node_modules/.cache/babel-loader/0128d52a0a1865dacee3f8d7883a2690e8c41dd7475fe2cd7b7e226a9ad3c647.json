{"ast":null,"code":"var _jsxFileName = \"/Users/elvazou/Downloads/RamdomAudioFlashcard/frontend/src/components/FolderManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FolderManager = () => {\n  _s();\n  const [folders, setFolders] = useState([]);\n  useEffect(() => {\n    // Fetch folder information from the backend API\n    fetch('http://localhost:5100/api/folders').then(response => response.json()).then(data => setFolders(data.folders)).catch(error => console.error('Error fetching folders:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Folders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: folders.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: folder\n      }, folder, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(FolderManager, \"y29ylgxvgT546+YZhmR9TjVNO2Q=\");\n_c = FolderManager;\nexport default FolderManager;\nvar _c;\n$RefreshReg$(_c, \"FolderManager\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FolderManager","_s","folders","setFolders","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","folder","_c","$RefreshReg$"],"sources":["/Users/elvazou/Downloads/RamdomAudioFlashcard/frontend/src/components/FolderManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst FolderManager = () => {\n  const [folders, setFolders] = useState([]);\n\n  useEffect(() => {\n    // Fetch folder information from the backend API\n    fetch('http://localhost:5100/api/folders')\n      .then(response => response.json())\n      .then(data => setFolders(data.folders))\n      .catch(error => console.error('Error fetching folders:', error));\n  }, []);\n\n  return (\n    <div>\n      <h2>Folders</h2>\n      <ul>\n        {folders.map((folder) => (\n          <li key={folder}>{folder}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default FolderManager;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACAO,KAAK,CAAC,mCAAmC,CAAC,CACvCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,UAAU,CAACK,IAAI,CAACN,OAAO,CAAC,CAAC,CACtCO,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EACpE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBjB,OAAA;MAAAa,QAAA,EACGV,OAAO,CAACe,GAAG,CAAEC,MAAM,iBAClBnB,OAAA;QAAAa,QAAA,EAAkBM;MAAM,GAAfA,MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CArBID,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AAuBnB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}