{"ast":null,"code":"var _jsxFileName = \"/Users/elvazou/Downloads/MusicFlashCard/frontend/src/components/UploadSong.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadSong({\n  setSongFilename\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState('');\n\n  // Handle the file selection from the file input\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setError(''); // Reset error state on file change\n  };\n\n  // Handle the file upload to the backend\n  const handleUpload = async () => {\n    if (!file) {\n      alert('Please select a song to upload');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      // Log the file details to ensure the correct file is selected\n      console.log('Uploading file:', file);\n      const response = await fetch('http://localhost:5000/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        alert(data.message);\n        setSongFilename(file.name); // Set the filename in the parent component\n      } else {\n        const data = await response.json();\n        setError(data.message || 'Upload failed');\n        alert('Upload failed');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Failed to upload the file');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload a Song\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \"audio/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload Song\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadSong, \"WY/lFMXfJhDAxJ/KP1aRjhJ7zxg=\");\n_c = UploadSong;\nexport default UploadSong;\nvar _c;\n$RefreshReg$(_c, \"UploadSong\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadSong","setSongFilename","_s","file","setFile","error","setError","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","console","log","response","fetch","method","body","ok","data","json","message","name","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","onClick","style","color","_c","$RefreshReg$"],"sources":["/Users/elvazou/Downloads/MusicFlashCard/frontend/src/components/UploadSong.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction UploadSong({ setSongFilename }) {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState('');\n\n  // Handle the file selection from the file input\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n    setError('');  // Reset error state on file change\n  };\n\n  // Handle the file upload to the backend\n  const handleUpload = async () => {\n    if (!file) {\n      alert('Please select a song to upload');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      // Log the file details to ensure the correct file is selected\n      console.log('Uploading file:', file);\n\n      const response = await fetch('http://localhost:5000/api/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        alert(data.message);\n        setSongFilename(file.name);  // Set the filename in the parent component\n      } else {\n        const data = await response.json();\n        setError(data.message || 'Upload failed');\n        alert('Upload failed');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Failed to upload the file');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Upload a Song</h2>\n      <input type=\"file\" onChange={handleFileChange} accept=\"audio/*\" />\n      <button onClick={handleUpload}>Upload Song</button>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </div>\n  );\n}\n\nexport default UploadSong;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAC;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMU,gBAAgB,GAAIC,CAAC,IAAK;IAC9BJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1BJ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EACjB,CAAC;;EAED;EACA,MAAMK,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACR,IAAI,EAAE;MACTS,KAAK,CAAC,gCAAgC,CAAC;MACvC;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEZ,IAAI,CAAC;IAE7B,IAAI;MACF;MACAa,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEd,IAAI,CAAC;MAEpC,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAER;MACR,CAAC,CAAC;MAEF,IAAIK,QAAQ,CAACI,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCZ,KAAK,CAACW,IAAI,CAACE,OAAO,CAAC;QACnBxB,eAAe,CAACE,IAAI,CAACuB,IAAI,CAAC,CAAC,CAAE;MAC/B,CAAC,MAAM;QACL,MAAMH,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClClB,QAAQ,CAACiB,IAAI,CAACE,OAAO,IAAI,eAAe,CAAC;QACzCb,KAAK,CAAC,eAAe,CAAC;MACxB;IACF,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdW,OAAO,CAACX,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BC,QAAQ,CAAC,2BAA2B,CAAC;IACvC;EACF,CAAC;EAED,oBACEP,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBhC,OAAA;MAAOiC,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAE1B,gBAAiB;MAAC2B,MAAM,EAAC;IAAS;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClEhC,OAAA;MAAQoC,OAAO,EAAExB,YAAa;MAAAgB,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAClD1B,KAAK,iBAAIN,OAAA;MAAGqC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAV,QAAA,EAAEtB;IAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV;AAAC7B,EAAA,CApDQF,UAAU;AAAAsC,EAAA,GAAVtC,UAAU;AAsDnB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}